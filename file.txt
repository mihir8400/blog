---------Fileupload.js----------------------
import React,{useState,useEffect} from 'react'
import axios from 'axios'

const Fileupload = () => {
    const[file,setFile]=useState([])
    
    function handleChange (event)
    {
        setFile(event.target.files[0])
    }
    const handleSubmit=(event)=>{
        event.preventDefault()
        const url='http://localhost:5000/image/upload';
        const formData=new FormData();
        formData.append('file',file);
        formData.append('fileName',file.name);
        const config={
            headers:{
                'content-type':'multipart/form-data'
            }
        }
        axios.post(url,formData,config).then((response)=>{
            console.log(response.data);
        })
    }
    const[data,setData]=useState([]);
    const img=async()=>{
        const showimg= await fetch('http://localhost:5000/image/display');
        setData(await showimg.json());
    };
    useEffect(()=>{
        img();
    },[]);
    
    return (
        <div className="App">
            <form method="POST">
                <h1>React File Upload</h1>
                <input type="file" onChange={handleChange}/><br/>
                <button type="button" onClick={handleSubmit}>Upload</button>
            </form>
            <table>
                <tr>
                    <td>Image</td>
                </tr>
                {
                    data.map((d)=>{
                        return(
                            
                            <td>
                                <img src={`./upload/${d.filename}`} height="200"/>
                            </td>
                            
                        )
                    })
                }
            </table>
        </div>
    )
}

export default Fileupload

---------student_models.js----------------------
const mongoose=require('mongoose')
const upload=new mongoose.Schema
({
    filename:{
        type:String,
        required:true,
    }
})

module.exports=mongoose.model('image_master',upload)

---------student_route.js----------------------
const express=require('express')
const student_models = require('../model/student_models')
const router=express.Router()
const uploadimage=require('../model/student_models')

router.post('/upload',(req,res)=>{
    if(req.files===null)
    {
        return res.json({data:'Nofile'})
    }
    const file=req.files.file
    const imageinsert=new uploadimage({
        filename:req.files.file.name
    })
    imageinsert.save()
    console.log(imageinsert)
    file.mv(`${__dirname}/../../client/public/upload/${file.name}`,
    err => {
        if(err)
        {
            console.log(err)
            return res.send(err)
        }
        return res.json({filename:file.name})
    }
    )
})
router.get('/display',async(req,res)=>{
    const data=await student_models.find()
    return res.status(200).json(data)
})
module.exports=router

---------server.js----------------------
const express=require('express')
const mongoose=require('mongoose')
const app=express()
const cors=require('cors')
const fileupload=require('express-fileupload')
const routesUrl=require('./routes/student_route')

mongoose.connect("mongodb://127.0.0.1:27017/image")
app.use(express.json())
app.use(cors());
app.use(fileupload())
app.use('/image',routesUrl);
app.listen(5000,()=>{
    console.log("Server is running");
})
