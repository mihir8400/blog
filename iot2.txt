A2-Q1.To interface Seven segment with Arduino and write a program to display numbers form 0 to 9 in seven segment

#define A 10

#define B 11

#define C 12

#define D 13

#define E 9  

#define F 8  

#define G 7  

int COUNT=0;  

void setup()
{
       for (int i=2;i<9;i++)
       {
            pinMode(i, OUTPUT);
       }
}

void loop()
{
      switch (COUNT)
      {
           case 0:
                    digitalWrite(A, HIGH);
                    digitalWrite(B, HIGH);
                    digitalWrite(C, HIGH);
                    digitalWrite(D, HIGH);
                    digitalWrite(E, HIGH);
                    digitalWrite(F, HIGH);
                    digitalWrite(G, LOW);
                    break;

            case 1:
                digitalWrite(A, LOW);
                digitalWrite(B, HIGH);
                digitalWrite(C, HIGH);
                digitalWrite(D, LOW);
                digitalWrite(E, LOW);
                digitalWrite(F, LOW);
                digitalWrite(G, LOW);
                break;

           case 2:
                digitalWrite(A, HIGH);
                digitalWrite(B, HIGH);
                digitalWrite(C, LOW);
                digitalWrite(D, HIGH);
                digitalWrite(E, HIGH);
                digitalWrite(F, LOW);
                digitalWrite(G, HIGH);
                break;

           case 3:
                digitalWrite(A, HIGH);
                digitalWrite(B, HIGH);
                digitalWrite(C, HIGH);
                digitalWrite(D, HIGH);
                digitalWrite(E, LOW);
                digitalWrite(F, LOW);
                digitalWrite(G, HIGH);
                break;

            case 4:
                digitalWrite(A, LOW);
                digitalWrite(B, HIGH);
                digitalWrite(C, HIGH);
                digitalWrite(D, LOW);
                digitalWrite(E, LOW);
                digitalWrite(F, HIGH);
                digitalWrite(G, HIGH);
                break;

            case 5:
                digitalWrite(A, HIGH);
                digitalWrite(B, LOW);
                digitalWrite(C, HIGH);
                digitalWrite(D, HIGH);
                digitalWrite(E, LOW);
                digitalWrite(F, HIGH);
                digitalWrite(G, HIGH);
                break;

           case 6:
                digitalWrite(A, HIGH);
                digitalWrite(B, LOW);
                digitalWrite(C, HIGH);
                digitalWrite(D, HIGH);
                digitalWrite(E, HIGH);
                digitalWrite(F, HIGH);
                digitalWrite(G, HIGH);
                break;

           case 7:
                digitalWrite(A, HIGH);
                digitalWrite(B, HIGH);
                digitalWrite(C, HIGH);
                digitalWrite(D, LOW);
                digitalWrite(E, LOW);
                digitalWrite(F, LOW);
                digitalWrite(G, LOW);
                break;

            case 8:
                digitalWrite(A, HIGH);
                digitalWrite(B, HIGH);
                digitalWrite(C, HIGH);
                digitalWrite(D, HIGH);
                digitalWrite(E, HIGH);
                digitalWrite(F, HIGH);
                digitalWrite(G, HIGH);
                break;

           case 9:
                digitalWrite(A, HIGH);
                digitalWrite(B, HIGH);
                digitalWrite(C, HIGH);
                digitalWrite(D, HIGH);
                digitalWrite(E, LOW);
                digitalWrite(F, HIGH);
                digitalWrite(G, HIGH);
                break;
           }

          if (COUNT<10)
          {
              COUNT++;
              delay(1000);
         }

         if (COUNT==10)
         {
              COUNT=0;
              delay(1000);
         }
}








Q2. To interface LCD with Arduino and write a program to Display your name on LCD.


#include <LiquidCrystal.h>

const int rs = 13, en = 12, d4 = 11, d5 = 10, d6 = 9, d7 = 8;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

void setup() {
  lcd.begin(16, 2);
  lcd.print("Mihir");
}

void loop() {
 
  lcd.setCursor(0, 1);
  
  lcd.print(millis() / 1000);
}










Q3. write a program display your name on LCD and to perform marquee/scroll left and right effect on LCD.

#include <LiquidCrystal.h>
const int rs = 13, en = 12, d4 = 11, d5 = 10, d6 = 9, d7 = 8;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

void setup() {
  lcd.begin(16, 2);
  lcd.print("Mihir");
  delay(1000);
}

void loop() {
    for (int positionCounter = 0; positionCounter < 6; positionCounter++) {
    lcd.scrollDisplayLeft();
    delay(150);
  }

  for (int positionCounter = 0; positionCounter < 6; positionCounter++) {
    lcd.scrollDisplayRight();
    delay(150);
  }
  }
  delay(1000);
}












Q4. Take only 3 readings of ultrasonic sensor (after trigger) at the intervals of 2 seconds then stop taking further readings. Average the readings and find out if that number // is palindrome number or not. And display the output in LCD.

#include <LiquidCrystal.h>

#define trigPin 7 
long duration; 
int distance;
const int rs = 13, en = 12, d4 = 11, d5 = 10, d6 = 9, d7 = 8;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

void setup() {
  pinMode(trigPin, OUTPUT); 
  pinMode(echoPin, INPUT); 
  Serial.begin(9600);
  Serial.println("Ultrasonic Sensor HC-SR04 Test");
  Serial.println("with Arduino UNO R3");
  lcd.begin(16, 2);
  lcd.print("Mihir");
  delay(1000);
  ultra();
  
}
void ultra(){
  int i=0,sum=0,avg=0,temp,rem,tot=0;
   for(i=0;i<3;i++){
  digitalWrite(trigPin, LOW);
  delay(2000);
  digitalWrite(trigPin, HIGH);
  delay(2000);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = duration * 0.034 / 2; 
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");
  tot=tot+distance;
}
  avg=tot/3;
  Serial.println(avg);
  int n=avg;
  temp=avg;
  while(n>0)    
  {    
    rem=n%10;    
    sum=(sum*10)+rem;    
    n=n/10;    
  }    
  if(temp==sum)    
  {
    Serial.println("palindrome number ");   
    lcd.print("palindrome number"); 
  }
  else
  {    
    Serial.println("not palindrome"); 
    lcd.print("not palindrome number");   
  }
}








Q5. Connect ESP with Wifi and print the IP and MAC address of the device.

#include <WiFi.h>

const char* WIFI_NAME= "GALAXYA33";
const char* WIFI_PASSWORD = "84008400";

//WiFiServer server;
void setup() {
  // put your setup code here, to run once:
Serial.begin(9600);
Serial.println("Connecting to... ");
Serial.println(WIFI_NAME);
WiFi.begin(WIFI_NAME, WIFI_PASSWORD);
while (WiFi.status() != WL_CONNECTED)
 {
  delay(1000);
  Serial.print("Trying to connect to Wifi Network");
}
Serial.println("");
Serial.println("Successfully connected to WiFi network");
Serial.println("IP address: ");
Serial.println(WiFi.localIP());
Serial.println("MAC address: ");
Serial.println(WiFi.macAddress());

}

void loop() {
  // put your main code here, to run repeatedly:

}









Q6. Write a program to communicate client and server through API. Fetch the led status value from database through php API and ON/OFF the LED or ON/OFF the Buzzer as // per status value in a Database.


#include <Arduino.h>

#include <WiFi.h>
#include <WiFiMulti.h>

#include <HTTPClient.h>

//#define Serial Serial

WiFiMulti wifiMulti;
WiFiServer server;

void setup() {

    pinMode(2, OUTPUT);
    
    Serial.begin(9600);

    Serial.println();
    Serial.println();
    Serial.println();

    for(uint8_t t = 4; t > 0; t--) {
        Serial.printf("[SETUP] WAIT %d...\n", t);
        Serial.flush();
        delay(1000);
    }

    wifiMulti.addAP("mihir", "84008400");
    wifiMulti.run();
      if(wifiMulti.run() == WL_CONNECTED) {
        Serial.println("");
        Serial.println("WiFi connected");
        Serial.println("IP address: ");
        Serial.println(WiFi.localIP());
    }
     server.begin();
}

void loop() {
    // wait for WiFi connection
    if((wifiMulti.run() == WL_CONNECTED)) {

        HTTPClient http;

        Serial.print("[HTTP] begin...\n");
        
       //HTTP // configure traged server and url
        http.begin("https://mihir.000webhostapp.com/public_html/fetch.php?name=led");
        Serial.print("[HTTP] GET...\n");
        // start connection and send HTTP header
        int httpCode = http.GET();
        Serial.println("httpcode"+ httpCode);
        // httpCode will be negative on error
        if(httpCode > 0) {
            // HTTP header has been send and Server response header has been handled
            Serial.printf("[HTTP] GET... code: %d\n", httpCode);

            // file found at server
            if(httpCode == HTTP_CODE_OK) {
                String payload = http.getString();
                Serial.println(payload);
                if (payload == "1") {
                  digitalWrite(2, HIGH);
                  Serial.println("LED/Buzzer ON");
                } else if (payload == "0") {
                  digitalWrite(2, LOW);
                  Serial.println("LED/Buzzer OFF");
                }
            }
        } else {
            Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
        }

        http.end();
    }

    delay(500);
}








Q7. Write a program to communicate client and server through API.Update the led /buzzer status value to database through php API as per LED/Buzzerâ€™s ON/OFF state.


#include <Arduino.h>
#include <WiFi.h>
#include <WiFiMulti.h>
#include <HTTPClient.h>

#define USE_SERIAL Serial
#define INPUT_PIN 2
#define LED_PIN 4

WiFiMulti wifiMulti;

String lastValue;

void setup() {

    Serial.begin(115200);

    pinMode(INPUT_PIN,INPUT_PULLUP);
pinMode(LED_PIN,OUTPUT);
    for(uint8_t t = 4; t > 0; t--) {
        Serial.printf("[SETUP] WAIT %d...\n", t);
        Serial.flush();
        delay(1000);
    }

  wifiMulti.addAP("GALAXYA33", "84008400");
    wifiMulti.run();
      if(wifiMulti.run() == WL_CONNECTED) {
        Serial.println("");
        Serial.println("WiFi connected");
        Serial.println("IP address: ");
        Serial.println(WiFi.localIP());
    }
    // server.begin();
    lastValue = "0";
}

void loop() {
    // wait for WiFi connection
    if((wifiMulti.run() == WL_CONNECTED)) {
        String webUrl;
        if(digitalRead(INPUT_PIN)==LOW)
        {
          digitalWrite(LED_PIN,HIGH);
          //digitalWrite(BUZZ_PIN,HIGH);
        }
        else
        {
         digitalWrite(LED_PIN,LOW);
        // digitalWrite(BUZZ_PIN,LOW);
  
        }
       
        if (digitalRead(LED_PIN) == HIGH) {
          if (lastValue == "0") {
                       webUrl = "https://mihir.000webhostapp.com/public_html/update.php?name=led&status=1";
            updateServer(webUrl);
            lastValue = "1";
          }
        } else {
          if (lastValue == "1") {
           webUrl = "https://mihir.000webhostapp.com/public_html/update.php?name=led&status=0";
            updateServer(webUrl);
            lastValue = "0";
          }
        }
    }
    delay(100);
}


void updateServer(String webUrl) {
  HTTPClient http;
  Serial.print("[HTTP] begin...\n");
  // configure traged server and url
  http.begin(webUrl); //HTTP

  Serial.print("[HTTP] GET...\n");
  // start connection and send HTTP header
  int httpCode = http.GET();

  // httpCode will be negative on error
  if(httpCode > 0) {
      // HTTP header has been send and Server response header has been handled
      Serial.printf("[HTTP] GET... code: %d\n", httpCode);

      // file found at server
      if(httpCode == HTTP_CODE_OK) {
          String payload = http.getString();
          Serial.println(payload);
      }
  } else {
      Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
  }

  http.end();
}
